---
swagger: "2.0"
info:
  description: "API for interfacing with NewsMaker service"
  version: "1.0.0"
  title: "NewsMaker"
  termsOfService: "http://newsmaker.azurewebsites.net/terms/"
  contact:
    name: "NewsMaker Team"
    url: "http://newsmaker.azurewebsite.net"
    email: "newsmaker@microsoft.com"
  license:
    name: "MIT"
    url: "http://opensource.org/licenses/MIT"
host: "newsmaker.azurewebsites.net"
basePath: "/api"
schemes:
- "http"
consumes:
- "application/json"
produces:
- "application/json"
paths:
  /cats:
    get:
      description: "Returns all cats from the system that the user has access to"
      operationId: "findCats"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      - "text/html"
      parameters:
      - name: "query"
        in: "query"
        description: "query to filter by"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
      - name: "limit"
        in: "query"
        description: "maximum number of results to return"
        required: false
        type: "integer"
        format: "int32"
      responses:
        200:
          description: "cats response"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/cat"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/errorModel"
      x-swagger-router-controller: "Default"
    post:
      description: "Creates a new cat."
      operationId: "addCat"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "cat"
        description: "Post to add"
        required: true
        schema:
          $ref: "#/definitions/cat"
      responses:
        200:
          description: "cat response"
          schema:
            $ref: "#/definitions/cat"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/errorModel"
      x-swagger-router-controller: "Default"
  /cats/{id}:
    get:
      description: "Returns a cat based on a single ID, if the user does not have\
        \ access to the cat"
      operationId: "getCatByID"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      - "text/html"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of cat to fetch"
        required: true
        type: "string"
      responses:
        200:
          description: "cat response"
          schema:
            $ref: "#/definitions/cat"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/errorModel"
      x-swagger-router-controller: "Default"
    delete:
      description: "deletes a single cat based on the ID supplied"
      operationId: "deleteCat"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of cat to delete"
        required: true
        type: "string"
      responses:
        204:
          description: "cat deleted"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/errorModel"
      x-swagger-router-controller: "Default"
  /feeds:
    get:
      description: "Returns all feeds from the system that the user has access to"
      operationId: "findFeeds"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      - "text/html"
      parameters:
      - name: "query"
        in: "query"
        description: "query to filter by"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
      - name: "limit"
        in: "query"
        description: "maximum number of results to return"
        required: false
        type: "integer"
        format: "int32"
      responses:
        200:
          description: "feeds response"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/feed"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/errorModel"
      x-swagger-router-controller: "Default"
    post:
      description: "Creates a new feed."
      operationId: "addFeed"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "feed"
        description: "Post to add"
        required: true
        schema:
          $ref: "#/definitions/feed"
      responses:
        200:
          description: "feed response"
          schema:
            $ref: "#/definitions/feed"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/errorModel"
      x-swagger-router-controller: "Default"
  /feeds/{id}:
    get:
      description: "Returns a feed based on a single ID, if the user does not have\
        \ access to the feed"
      operationId: "getFeedByID"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      - "text/html"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of feed to fetch"
        required: true
        type: "string"
      responses:
        200:
          description: "feed response"
          schema:
            $ref: "#/definitions/feed"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/errorModel"
      x-swagger-router-controller: "Default"
    delete:
      description: "deletes a single feed based on the ID supplied"
      operationId: "deleteFeed"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of feed to delete"
        required: true
        type: "string"
      responses:
        204:
          description: "feed deleted"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/errorModel"
      x-swagger-router-controller: "Default"
  /posts:
    get:
      description: "Returns all posts from the system that the user has access to"
      operationId: "findPosts"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      - "text/html"
      parameters:
      - name: "query"
        in: "query"
        description: "query to filter by"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
      - name: "limit"
        in: "query"
        description: "maximum number of results to return"
        required: false
        type: "integer"
        format: "int32"
      responses:
        200:
          description: "posts response"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/post"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/errorModel"
      x-swagger-router-controller: "Default"
    post:
      description: "Creates a new post."
      operationId: "addPost"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "post"
        description: "Post to add"
        required: true
        schema:
          $ref: "#/definitions/post"
      responses:
        200:
          description: "post response"
          schema:
            $ref: "#/definitions/post"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/errorModel"
      x-swagger-router-controller: "Default"
  /posts/{id}:
    get:
      description: "Returns a post based on a single ID, if the user does not have\
        \ access to the post"
      operationId: "getPostByID"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      - "text/html"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of post to fetch"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "post response"
          schema:
            $ref: "#/definitions/post"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/errorModel"
      x-swagger-router-controller: "Default"
    delete:
      description: "deletes a single post based on the ID supplied"
      operationId: "deletePost"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of post to delete"
        required: true
        type: "integer"
        format: "int64"
      responses:
        204:
          description: "post deleted"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/errorModel"
      x-swagger-router-controller: "Default"
definitions:
  cat:
    type: "object"
    required:
    - "catName"
    properties:
      id:
        type: "string"
      catName:
        type: "string"
  feed:
    type: "object"
    required:
    - "catID"
    - "feedName"
    - "feedSite"
    - "feedURL"
    properties:
      id:
        type: "string"
      catID:
        type: "string"
      feedName:
        type: "string"
      feedSite:
        type: "string"
      feedURL:
        type: "string"
  post:
    type: "object"
    required:
    - "date"
    - "feedID"
    - "link"
    - "title"
    properties:
      id:
        type: "integer"
        format: "int64"
      title:
        type: "string"
      summary:
        type: "string"
      date:
        type: "string"
        format: "dateTime"
      author:
        type: "string"
      link:
        type: "string"
      categories:
        type: "array"
        items:
          type: "string"
      feedID:
        type: "string"
      feedName:
        type: "string"
      catID:
        type: "string"
      unixtime:
        type: "integer"
        format: "int64"
  errorModel:
    type: "object"
    required:
    - "code"
    - "message"
    properties:
      code:
        type: "integer"
        format: "int32"
      message:
        type: "string"
