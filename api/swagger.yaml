---
swagger: "2.0"
info:
  description: "API for interfacing with NewsMaker backend"
  version: "1.0.0"
  title: "NewsMaker"
  termsOfService: "http://newsmaker.azurewebsites.net/terms/"
  contact:
    name: "NewsMaker Team"
    url: "http://newsmaker.azurewebsite.net"
    email: "newsmaker@microsoft.com"
  license:
    name: "MIT"
    url: "http://opensource.org/licenses/MIT"
host: "newsmaker.azurewebsite.net"
basePath: "/api"
schemes:
- "http"
consumes:
- "application/json"
produces:
- "application/json"
paths:
  /posts:
    get:
      description: "Returns all posts from the system that the user has access to"
      operationId: "findPosts"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      - "text/html"
      parameters:
      - name: "tags"
        in: "query"
        description: "tags to filter by"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
      - name: "limit"
        in: "query"
        description: "maximum number of results to return"
        required: false
        type: "integer"
        format: "int32"
      responses:
        200:
          description: "posts response"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/post"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/errorModel"
      x-swagger-router-controller: "Default"
    post:
      description: "Creates a new post in the store.  Duplicates are allowed"
      operationId: "addPet"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "post"
        description: "Post to add"
        required: true
        schema:
          $ref: "#/definitions/newPost"
      responses:
        200:
          description: "post response"
          schema:
            $ref: "#/definitions/post"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/errorModel"
      x-swagger-router-controller: "Default"
  /posts/{id}:
    get:
      description: "Returns a post based on a single ID, if the user does not have\
        \ access to the post"
      operationId: "findPetById"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      - "text/html"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of pet to fetch"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "post response"
          schema:
            $ref: "#/definitions/post"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/errorModel"
      x-swagger-router-controller: "Default"
    delete:
      description: "deletes a single post based on the ID supplied"
      operationId: "deletePost"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of post to delete"
        required: true
        type: "integer"
        format: "int64"
      responses:
        204:
          description: "post deleted"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/errorModel"
      x-swagger-router-controller: "Default"
definitions:
  post:
    type: "object"
    required:
    - "id"
    - "name"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      tag:
        type: "string"
  newPost:
    type: "object"
    required:
    - "name"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      tag:
        type: "string"
  errorModel:
    type: "object"
    required:
    - "code"
    - "message"
    properties:
      code:
        type: "integer"
        format: "int32"
      message:
        type: "string"
